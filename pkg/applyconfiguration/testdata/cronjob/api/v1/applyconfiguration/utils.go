// Code generated by applyconfiguration. DO NOT EDIT.

package applyconfiguration

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	testing "k8s.io/client-go/testing"
	internal "sigs.k8s.io/controller-tools/pkg/applyconfiguration/testdata/cronjob/api/v1/applyconfiguration/internal"
	testdatakubebuilderiov1 "sigs.k8s.io/controller-tools/pkg/applyconfiguration/testdata/cronjob/api/v1/applyconfiguration/testdata.kubebuilder.io/v1"
	v1 "testdata.kubebuilder.io/v1"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=testdata.kubebuilder.io, Version=v1
	case v1.SchemeGroupVersion.WithKind("AssociativeType"):
		return &testdatakubebuilderiov1.AssociativeTypeApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("ContainsNestedMap"):
		return &testdatakubebuilderiov1.ContainsNestedMapApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("CronJob"):
		return &testdatakubebuilderiov1.CronJobApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("CronJobSpec"):
		return &testdatakubebuilderiov1.CronJobSpecApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("CronJobStatus"):
		return &testdatakubebuilderiov1.CronJobStatusApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("Duration"):
		return &testdatakubebuilderiov1.DurationApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("EmbeddedStruct"):
		return &testdatakubebuilderiov1.EmbeddedStructApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("EmpiableObject"):
		return &testdatakubebuilderiov1.EmpiableObjectApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("ExportedStruct"):
		return &testdatakubebuilderiov1.ExportedStructApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("JustNestedObject"):
		return &testdatakubebuilderiov1.JustNestedObjectApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("MinMaxObject"):
		return &testdatakubebuilderiov1.MinMaxObjectApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("NestedObject"):
		return &testdatakubebuilderiov1.NestedObjectApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("NestedStructWithSeveralFields"):
		return &testdatakubebuilderiov1.NestedStructWithSeveralFieldsApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("Preserved"):
		return &testdatakubebuilderiov1.PreservedApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("RootObject"):
		return &testdatakubebuilderiov1.RootObjectApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("UnexportedStruct"):
		return &testdatakubebuilderiov1.unexportedStructApplyConfiguration{}

	}
	return nil
}

func NewTypeConverter(scheme *runtime.Scheme) *testing.TypeConverter {
	return &testing.TypeConverter{Scheme: scheme, TypeResolver: internal.Parser()}
}
